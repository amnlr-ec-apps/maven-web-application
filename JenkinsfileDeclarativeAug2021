pipeline{

agent any 
/*agent{
label 'NodeName'
}
*/
tools{
maven 'Maven 3.8.3'
}
options{
timestamps() //It will add the timestamp to the output
buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '5', numToKeepStr: '5'))
}
triggers{
//poll scm
pollSCM('* * * * *')
//BuilPeriodically
cron('* * * * *')
//GitHub WebHook
githubPush()
}
stages{
   stage('CheckOutCode'){
   steps{
   git credentialsId: '02f90c2a-a8c9-41fb-ae3b-d8e5f7d07168', url: 'https://github.com/amnlr-ec-apps/maven-web-application.git'
   }
   }
   
   stage('Build'){
   steps{
   sh "mvn clean package"
   }
   }
   stage('ExecuteSonarQuebeReport'){
   steps{
   sh "mvn sonar:sonar"
   }
   }
   /*stage('UploadArtifactsIntotheNexusRepo'){
   steps{
   sh "mvn deploy"
   }
   }
   */
   stage('DeployAppintoTomcatServer'){
   steps{
   sshagent(['6386b7db-ab9c-4f82-a001-4385242b52a1']) {
   sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.109.213.84:/opt/apache-tomcat-9.0.54/webapps/"
   }
   }
   }
}
/*
post{
  success{
  mail bcc: 'manohara.arm@gmail.com', body: 'Application has  been deployed to the Tomcat server successfully.', cc: 'manohara.arm@gmail.com', from: 'manohara.arm@gmail.com', replyTo: 'manohara.arm@gmail.com', subject: 'Build', to: 'manohara.arm@gmail.com'
  }
  
  failure{
  mail bcc: 'manohara.arm@gmail.com', body: 'Application has failed to deployed to the Tomcat server.', cc: 'manohara.arm@gmail.com', from: 'manohara.arm@gmail.com', replyTo: 'manohara.arm@gmail.com', subject: 'Build', to: 'manohara.arm@gmail.com'
  }
}
*/
}
